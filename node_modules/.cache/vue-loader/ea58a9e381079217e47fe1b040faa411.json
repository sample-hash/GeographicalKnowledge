{"remainingRequest":"/Users/andrii/Documents/VS Code/Vue_learn/GeographicalKnowledge/WorkSpace/GeographicalKnowledge/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrii/Documents/VS Code/Vue_learn/GeographicalKnowledge/WorkSpace/GeographicalKnowledge/src/components/QuestionsBlock.vue?vue&type=style&index=0&id=4e1b4970&scoped=true&lang=css&","dependencies":[{"path":"/Users/andrii/Documents/VS Code/Vue_learn/GeographicalKnowledge/WorkSpace/GeographicalKnowledge/src/components/QuestionsBlock.vue","mtime":1624388833095},{"path":"/Users/andrii/Documents/VS Code/Vue_learn/GeographicalKnowledge/WorkSpace/GeographicalKnowledge/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrii/Documents/VS Code/Vue_learn/GeographicalKnowledge/WorkSpace/GeographicalKnowledge/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/andrii/Documents/VS Code/Vue_learn/GeographicalKnowledge/WorkSpace/GeographicalKnowledge/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/andrii/Documents/VS Code/Vue_learn/GeographicalKnowledge/WorkSpace/GeographicalKnowledge/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrii/Documents/VS Code/Vue_learn/GeographicalKnowledge/WorkSpace/GeographicalKnowledge/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCnVsIHsKICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7CiAgcGFkZGluZzogMDsKfQpsaSB7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBtYXJnaW46IDAgMTBweDsKfQouZXJyb3J7CiAgY29sb3I6IHJnYigyMTEsIDE1LCAxNSk7CiAgZm9udC1zaXplOiA5cHg7CiAgZm9udC13ZWlnaHQ6IDkwMDsKfQpidXR0b257CiAgbWFyZ2luOiAwIDEwcHg7Cn0K"},{"version":3,"sources":["QuestionsBlock.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"QuestionsBlock.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div v-if=\"starter\">\n    <div>\n      <h3>Podaj ilość pytań</h3>\n      <input type=\"number\" min=\"0\" :max=\"datas.length\" v-model=\"questionCount\">\n      <button @click=\"start\">Rozpocznij test</button>\n    </div>\n    <p class=\"error\" v-show=\"!(questionCount > 0 && questionCount <= datas.length)\">Wprowadź wartość od 1 do {{datas.length}}</p>\n  </div>\n  <div v-else-if=\"question\">\n    <h3>{{questionIndex+1}}/{{questionCount}} {{question.question}}</h3>\n    <ul>\n      <li v-for=\"answer in question.answers\" :key=\"answer.answer\">\n        <div class=\"answer-block\">\n          <label>\n            <input type=\"radio\" :value=\"answer\" v-model=\"answer[questionIndex]\">\n            {{answer.answer}}\n          </label>\n        </div>\n      </li>\n    </ul>\n    <div>\n      <button @click=\"previous\" :disabled=\"questionIndex == 0\">Poprzednie pytanie</button>\n      <button @click=\"next\" v-show=\"!checkLast\">Kolejne pytanie</button>\n      <button @click=\"showResult\" v-show=\"checkLast\">Zakończ i zobacz wynik</button>\n    </div>\n  </div>\n  <div v-else-if=\"result\">\n    <h3>Poprawnych odpowiedzi: {{countCorrectAnswer}}/{{questionCount}}</h3>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      datas: [],\n      questionIndex: 0,\n      answer: [],\n      questionCount: 0,\n      countCorrectAnswer: 0,\n      starter: true, \n      result: false,\n    };\n  },\n  computed: {\n    question() {\n      if (this.questionIndex < this.questionCount) {\n        return this.datas[this.questionIndex];\n      }\n      return false;\n    },\n    checkLast() {\n      if (this.questionIndex === this.questionCount - 1) {\n        return true;\n      }\n      return false;\n    },\n  },\n  methods: {\n    start: function() {\n      if (\n        !(this.questionCount <= 0) &&\n        !(this.questionCount > this.datas.length)\n      ) {\n        this.starter = false;\n      }\n    },\n    next: function() {\n      if (this.questionIndex < this.questionCount) {\n        this.questionIndex++;\n      }\n    },\n    previous: function() {\n      this.questionIndex--;\n    },\n    showResult: function() {\n      for (var index = 0; index < this.answer.length; index++) {\n        if (\n          !(this.answer[index] == null) &&\n          this.answer[index].status === true\n        ) {\n          this.countCorrectAnswer++;\n        }\n      }\n      this.result = true;\n      this.next();\n    },\n    mixArray: function () {\n      this.datas.sort(function (el) {\n        el.answers.sort(function () {\n          return Math.random() - 0.5;\n        });\n        return Math.random() - 0.5;\n      });\n    },\n  },\n  mounted() {\n    axios.get('data.json').then((response) => {\n      this.datas = response.data.use;\n      this.mixArray();\n    });\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: flex;\n  justify-content: center;\n  margin: 0 10px;\n}\n.error{\n  color: rgb(211, 15, 15);\n  font-size: 9px;\n  font-weight: 900;\n}\nbutton{\n  margin: 0 10px;\n}\n</style>\n"]}]}