{"remainingRequest":"/Users/andrii/Documents/VS Code/Vue_learn/GeographicalKnowledge/WorkSpace/GeographicalKnowledge/node_modules/babel-loader/lib/index.js!/Users/andrii/Documents/VS Code/Vue_learn/GeographicalKnowledge/WorkSpace/GeographicalKnowledge/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/andrii/Documents/VS Code/Vue_learn/GeographicalKnowledge/WorkSpace/GeographicalKnowledge/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrii/Documents/VS Code/Vue_learn/GeographicalKnowledge/WorkSpace/GeographicalKnowledge/src/components/QuestionsBlock.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/andrii/Documents/VS Code/Vue_learn/GeographicalKnowledge/WorkSpace/GeographicalKnowledge/src/components/QuestionsBlock.vue","mtime":1624388833095},{"path":"/Users/andrii/Documents/VS Code/Vue_learn/GeographicalKnowledge/WorkSpace/GeographicalKnowledge/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrii/Documents/VS Code/Vue_learn/GeographicalKnowledge/WorkSpace/GeographicalKnowledge/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/andrii/Documents/VS Code/Vue_learn/GeographicalKnowledge/WorkSpace/GeographicalKnowledge/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrii/Documents/VS Code/Vue_learn/GeographicalKnowledge/WorkSpace/GeographicalKnowledge/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29ydC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGF0YXM6IFtdLAogICAgICBxdWVzdGlvbkluZGV4OiAwLAogICAgICBhbnN3ZXI6IFtdLAogICAgICBxdWVzdGlvbkNvdW50OiAwLAogICAgICBjb3VudENvcnJlY3RBbnN3ZXI6IDAsCiAgICAgIHN0YXJ0ZXI6IHRydWUsCiAgICAgIHJlc3VsdDogZmFsc2UKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgcXVlc3Rpb246IGZ1bmN0aW9uIHF1ZXN0aW9uKCkgewogICAgICBpZiAodGhpcy5xdWVzdGlvbkluZGV4IDwgdGhpcy5xdWVzdGlvbkNvdW50KSB7CiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YXNbdGhpcy5xdWVzdGlvbkluZGV4XTsKICAgICAgfQoKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfSwKICAgIGNoZWNrTGFzdDogZnVuY3Rpb24gY2hlY2tMYXN0KCkgewogICAgICBpZiAodGhpcy5xdWVzdGlvbkluZGV4ID09PSB0aGlzLnF1ZXN0aW9uQ291bnQgLSAxKSB7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0KCiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHN0YXJ0OiBmdW5jdGlvbiBzdGFydCgpIHsKICAgICAgaWYgKCEodGhpcy5xdWVzdGlvbkNvdW50IDw9IDApICYmICEodGhpcy5xdWVzdGlvbkNvdW50ID4gdGhpcy5kYXRhcy5sZW5ndGgpKSB7CiAgICAgICAgdGhpcy5zdGFydGVyID0gZmFsc2U7CiAgICAgIH0KICAgIH0sCiAgICBuZXh0OiBmdW5jdGlvbiBuZXh0KCkgewogICAgICBpZiAodGhpcy5xdWVzdGlvbkluZGV4IDwgdGhpcy5xdWVzdGlvbkNvdW50KSB7CiAgICAgICAgdGhpcy5xdWVzdGlvbkluZGV4Kys7CiAgICAgIH0KICAgIH0sCiAgICBwcmV2aW91czogZnVuY3Rpb24gcHJldmlvdXMoKSB7CiAgICAgIHRoaXMucXVlc3Rpb25JbmRleC0tOwogICAgfSwKICAgIHNob3dSZXN1bHQ6IGZ1bmN0aW9uIHNob3dSZXN1bHQoKSB7CiAgICAgIGZvciAodmFyIGluZGV4ID0gMDsgaW5kZXggPCB0aGlzLmFuc3dlci5sZW5ndGg7IGluZGV4KyspIHsKICAgICAgICBpZiAoISh0aGlzLmFuc3dlcltpbmRleF0gPT0gbnVsbCkgJiYgdGhpcy5hbnN3ZXJbaW5kZXhdLnN0YXR1cyA9PT0gdHJ1ZSkgewogICAgICAgICAgdGhpcy5jb3VudENvcnJlY3RBbnN3ZXIrKzsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHRoaXMucmVzdWx0ID0gdHJ1ZTsKICAgICAgdGhpcy5uZXh0KCk7CiAgICB9LAogICAgbWl4QXJyYXk6IGZ1bmN0aW9uIG1peEFycmF5KCkgewogICAgICB0aGlzLmRhdGFzLnNvcnQoZnVuY3Rpb24gKGVsKSB7CiAgICAgICAgZWwuYW5zd2Vycy5zb3J0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHJldHVybiBNYXRoLnJhbmRvbSgpIC0gMC41OwogICAgICAgIH0pOwogICAgICAgIHJldHVybiBNYXRoLnJhbmRvbSgpIC0gMC41OwogICAgICB9KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIGF4aW9zLmdldCgnZGF0YS5qc29uJykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgX3RoaXMuZGF0YXMgPSByZXNwb25zZS5kYXRhLnVzZTsKCiAgICAgIF90aGlzLm1peEFycmF5KCk7CiAgICB9KTsKICB9Cn07"},{"version":3,"sources":["QuestionsBlock.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,OAAA,KAAA,MAAA,OAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,aAAA,EAAA,CAFA;AAGA,MAAA,MAAA,EAAA,EAHA;AAIA,MAAA,aAAA,EAAA,CAJA;AAKA,MAAA,kBAAA,EAAA,CALA;AAMA,MAAA,OAAA,EAAA,IANA;AAOA,MAAA,MAAA,EAAA;AAPA,KAAA;AASA,GAXA;AAYA,EAAA,QAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,UAAA,KAAA,aAAA,GAAA,KAAA,aAAA,EAAA;AACA,eAAA,KAAA,KAAA,CAAA,KAAA,aAAA,CAAA;AACA;;AACA,aAAA,KAAA;AACA,KANA;AAOA,IAAA,SAPA,uBAOA;AACA,UAAA,KAAA,aAAA,KAAA,KAAA,aAAA,GAAA,CAAA,EAAA;AACA,eAAA,IAAA;AACA;;AACA,aAAA,KAAA;AACA;AAZA,GAZA;AA0BA,EAAA,OAAA,EAAA;AACA,IAAA,KAAA,EAAA,iBAAA;AACA,UACA,EAAA,KAAA,aAAA,IAAA,CAAA,KACA,EAAA,KAAA,aAAA,GAAA,KAAA,KAAA,CAAA,MAAA,CAFA,EAGA;AACA,aAAA,OAAA,GAAA,KAAA;AACA;AACA,KARA;AASA,IAAA,IAAA,EAAA,gBAAA;AACA,UAAA,KAAA,aAAA,GAAA,KAAA,aAAA,EAAA;AACA,aAAA,aAAA;AACA;AACA,KAbA;AAcA,IAAA,QAAA,EAAA,oBAAA;AACA,WAAA,aAAA;AACA,KAhBA;AAiBA,IAAA,UAAA,EAAA,sBAAA;AACA,WAAA,IAAA,KAAA,GAAA,CAAA,EAAA,KAAA,GAAA,KAAA,MAAA,CAAA,MAAA,EAAA,KAAA,EAAA,EAAA;AACA,YACA,EAAA,KAAA,MAAA,CAAA,KAAA,KAAA,IAAA,KACA,KAAA,MAAA,CAAA,KAAA,EAAA,MAAA,KAAA,IAFA,EAGA;AACA,eAAA,kBAAA;AACA;AACA;;AACA,WAAA,MAAA,GAAA,IAAA;AACA,WAAA,IAAA;AACA,KA5BA;AA6BA,IAAA,QAAA,EAAA,oBAAA;AACA,WAAA,KAAA,CAAA,IAAA,CAAA,UAAA,EAAA,EAAA;AACA,QAAA,EAAA,CAAA,OAAA,CAAA,IAAA,CAAA,YAAA;AACA,iBAAA,IAAA,CAAA,MAAA,KAAA,GAAA;AACA,SAFA;AAGA,eAAA,IAAA,CAAA,MAAA,KAAA,GAAA;AACA,OALA;AAMA;AApCA,GA1BA;AAgEA,EAAA,OAhEA,qBAgEA;AAAA;;AACA,IAAA,KAAA,CAAA,GAAA,CAAA,WAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,MAAA,KAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA,CAAA,GAAA;;AACA,MAAA,KAAA,CAAA,QAAA;AACA,KAHA;AAIA;AArEA,CAAA","sourcesContent":["<template>\n  <div v-if=\"starter\">\n    <div>\n      <h3>Podaj ilość pytań</h3>\n      <input type=\"number\" min=\"0\" :max=\"datas.length\" v-model=\"questionCount\">\n      <button @click=\"start\">Rozpocznij test</button>\n    </div>\n    <p class=\"error\" v-show=\"!(questionCount > 0 && questionCount <= datas.length)\">Wprowadź wartość od 1 do {{datas.length}}</p>\n  </div>\n  <div v-else-if=\"question\">\n    <h3>{{questionIndex+1}}/{{questionCount}} {{question.question}}</h3>\n    <ul>\n      <li v-for=\"answer in question.answers\" :key=\"answer.answer\">\n        <div class=\"answer-block\">\n          <label>\n            <input type=\"radio\" :value=\"answer\" v-model=\"answer[questionIndex]\">\n            {{answer.answer}}\n          </label>\n        </div>\n      </li>\n    </ul>\n    <div>\n      <button @click=\"previous\" :disabled=\"questionIndex == 0\">Poprzednie pytanie</button>\n      <button @click=\"next\" v-show=\"!checkLast\">Kolejne pytanie</button>\n      <button @click=\"showResult\" v-show=\"checkLast\">Zakończ i zobacz wynik</button>\n    </div>\n  </div>\n  <div v-else-if=\"result\">\n    <h3>Poprawnych odpowiedzi: {{countCorrectAnswer}}/{{questionCount}}</h3>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      datas: [],\n      questionIndex: 0,\n      answer: [],\n      questionCount: 0,\n      countCorrectAnswer: 0,\n      starter: true, \n      result: false,\n    };\n  },\n  computed: {\n    question() {\n      if (this.questionIndex < this.questionCount) {\n        return this.datas[this.questionIndex];\n      }\n      return false;\n    },\n    checkLast() {\n      if (this.questionIndex === this.questionCount - 1) {\n        return true;\n      }\n      return false;\n    },\n  },\n  methods: {\n    start: function() {\n      if (\n        !(this.questionCount <= 0) &&\n        !(this.questionCount > this.datas.length)\n      ) {\n        this.starter = false;\n      }\n    },\n    next: function() {\n      if (this.questionIndex < this.questionCount) {\n        this.questionIndex++;\n      }\n    },\n    previous: function() {\n      this.questionIndex--;\n    },\n    showResult: function() {\n      for (var index = 0; index < this.answer.length; index++) {\n        if (\n          !(this.answer[index] == null) &&\n          this.answer[index].status === true\n        ) {\n          this.countCorrectAnswer++;\n        }\n      }\n      this.result = true;\n      this.next();\n    },\n    mixArray: function () {\n      this.datas.sort(function (el) {\n        el.answers.sort(function () {\n          return Math.random() - 0.5;\n        });\n        return Math.random() - 0.5;\n      });\n    },\n  },\n  mounted() {\n    axios.get('data.json').then((response) => {\n      this.datas = response.data.use;\n      this.mixArray();\n    });\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: flex;\n  justify-content: center;\n  margin: 0 10px;\n}\n.error{\n  color: rgb(211, 15, 15);\n  font-size: 9px;\n  font-weight: 900;\n}\nbutton{\n  margin: 0 10px;\n}\n</style>\n"],"sourceRoot":"src/components"}]}